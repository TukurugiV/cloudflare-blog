name: Check Markdown Files (PR)

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'posts/**/*.md'
      - 'events/**/*.md'
      - 'news/**/*.md'
      - '**/*.md'

jobs:
  check-markdown:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Dry run - Check Markdown processing
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      run: |
        echo "🔍 Checking Markdown files for processing requirements..."
        
        # ローカル画像があるかチェック
        local_images=$(find . -name "*.md" -exec grep -l "!\[.*\]([^h][^t][^t][^p]" {} \; 2>/dev/null || true)
        
        if [ -n "$local_images" ]; then
          echo "📸 Found Markdown files with local images:"
          echo "$local_images"
          echo ""
          echo "These files will be processed when merged to main branch."
        else
          echo "✅ No local images found in Markdown files."
        fi
        
        # JSONファイル生成のチェック
        echo ""
        echo "📄 Checking for JSON generation requirements..."
        
        for folder in events news posts; do
          if [ -d "$folder" ] && [ -n "$(find "$folder" -name "*.md" 2>/dev/null)" ]; then
            echo "✅ Found Markdown files in $folder/ - JSON will be generated"
          fi
        done

    - name: Validate Markdown syntax
      run: |
        echo "🔍 Validating Markdown syntax..."
        
        # フロントマターの基本的な検証
        find . -name "*.md" | while read file; do
          echo "Checking: $file"
          
          # フロントマターの存在チェック
          if head -n 1 "$file" | grep -q "^---$"; then
            echo "  ✅ Front matter found"
            
            # 基本的なYAML構文チェック（簡易版）
            if grep -A 20 "^---$" "$file" | grep -B 20 "^---$" | tail -n +2 | head -n -1 > /tmp/frontmatter.yml; then
              # タイトルの存在チェック
              if grep -q "^title:" /tmp/frontmatter.yml; then
                echo "  ✅ Title field found"
              else
                echo "  ⚠️ Warning: No title field found"
              fi
            fi
          else
            echo "  ℹ️ No front matter found"
          fi
        done

    - name: Create PR comment
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          
          // ローカル画像の検索
          let localImages = '';
          try {
            localImages = execSync('find . -name "*.md" -exec grep -l "!\\[.*\\]([^h][^t][^t][^p]" {} \\; 2>/dev/null || true', { encoding: 'utf8' });
          } catch (e) {
            localImages = '';
          }
          
          let comment = '## 🤖 Markdown Processing Preview\n\n';
          
          if (localImages.trim()) {
            comment += '### 📸 Local Images Detected\n';
            comment += 'The following files contain local images that will be uploaded to Cloudflare Images when merged:\n\n';
            localImages.trim().split('\n').forEach(file => {
              comment += `- \`${file}\`\n`;
            });
            comment += '\n';
          } else {
            comment += '### ✅ No Local Images\nNo local images found that need processing.\n\n';
          }
          
          comment += '### 📄 JSON Generation\n';
          comment += 'The following JSON files will be updated after merge:\n';
          comment += '- `events.json`\n';
          comment += '- `news.json`\n';
          comment += '- `posts.json`\n';
          comment += '- `posts-categories.json`\n\n';
          
          comment += '> **Note:** Actual processing will occur automatically when this PR is merged to the main branch.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });