name: Process Markdown Files (Debug版)

on:
  push:
    branches: [ main, master ]
    paths:
      - 'posts/**/*.md'
      - 'events/**/*.md'
      - 'news/**/*.md'
      - '**/*.md'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'posts/**/*.md'
      - 'events/**/*.md'
      - 'news/**/*.md'
      - '**/*.md'
  workflow_dispatch: # 手動実行を許可

# ワークフローレベルでの権限設定
permissions:
  contents: write
  actions: read

jobs:
  process-markdown:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          echo "Using existing package-lock.json"
          npm ci
        else
          echo "No package-lock.json found, running npm install"
          npm install
        fi

    # デバッグ: 環境情報の確認
    - name: Debug - Environment Info
      run: |
        echo "=== 🔍 環境情報 ==="
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo ""
        echo "=== 📂 ディレクトリ構造 ==="
        find . -name "*.md" -o -name "*.js" | head -20
        echo ""
        echo "=== 🔐 環境変数チェック ==="
        echo "CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID:+設定済み}"
        echo "CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN:+設定済み}"
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

    - name: Check for Markdown changes
      id: check_changes
      run: |
        # Markdownファイルに変更があるかチェック
        if git diff --name-only HEAD~1 HEAD | grep -E '\.(md)$'; then
          echo "markdown_changed=true" >> $GITHUB_OUTPUT
          echo "✅ Markdown files have been changed"
          echo "Changed files:"
          git diff --name-only HEAD~1 HEAD | grep -E '\.(md)$'
        else
          echo "markdown_changed=false" >> $GITHUB_OUTPUT
          echo "ℹ️  No Markdown files changed"
        fi

    # デバッグ: 処理対象ファイルの詳細確認
    - name: Debug - Analyze Markdown files
      if: steps.check_changes.outputs.markdown_changed == 'true'
      run: |
        echo "=== 📋 変更されたMarkdownファイルの詳細 ==="
        for file in $(git diff --name-only HEAD~1 HEAD | grep -E '\.(md)$'); do
          if [ -f "$file" ]; then
            echo "📄 ファイル: $file"
            echo "   サイズ: $(stat -c%s "$file") bytes"
            echo "   フロントマター確認:"
            if head -10 "$file" | grep -q "^---"; then
              echo "   ✅ フロントマターあり"
              echo "   画像フィールド:"
              grep -E "(coverImage|image|thumbnail):" "$file" || echo "   ❌ 画像フィールドなし"
            else
              echo "   ❌ フロントマターなし"
            fi
            echo "   Markdown画像記法:"
            grep -E "!\[.*\]\(.*\)" "$file" || echo "   ❌ 画像記法なし"
            echo "   ローカル画像ファイル確認:"
            dirname_file=$(dirname "$file")
            if ls "$dirname_file"/*.{jpg,jpeg,png,gif,webp} 2>/dev/null; then
              echo "   ✅ 画像ファイルあり"
              ls "$dirname_file"/*.{jpg,jpeg,png,gif,webp} 2>/dev/null
            else
              echo "   ❌ 画像ファイルなし"
            fi
            echo ""
          fi
        done

    # どのスクリプトを使用するかの確認
    - name: Debug - Check processing script
      if: steps.check_changes.outputs.markdown_changed == 'true'
      run: |
        echo "=== 🔍 処理スクリプトの確認 ==="
        if [ -f "imgReplace.js" ]; then
          echo "✅ imgReplace.js が見つかりました"
          echo "ファイルサイズ: $(stat -c%s imgReplace.js) bytes"
          echo "実行権限: $(stat -c%A imgReplace.js)"
        else
          echo "❌ imgReplace.js が見つかりません"
        fi
        
        if [ -f "md-cloudflare-processor.js" ]; then
          echo "✅ md-cloudflare-processor.js が見つかりました"
          echo "ファイルサイズ: $(stat -c%s md-cloudflare-processor.js) bytes"
        else
          echo "❌ md-cloudflare-processor.js が見つかりません"
        fi

    - name: Process Markdown files
      if: steps.check_changes.outputs.markdown_changed == 'true'
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      run: |
        echo "=== 🚀 Markdown処理を開始 ==="
        echo "使用するスクリプト: imgReplace.js"
        echo "実行コマンド: node imgReplace.js -i ./ -r"
        echo ""
        
        # 詳細ログ付きで実行
        if [ -f "imgReplace.js" ]; then
          node imgReplace.js -i ./ -r
        else
          echo "❌ エラー: imgReplace.js が見つかりません"
          echo "利用可能なJavaScriptファイル:"
          find . -name "*.js" -type f
          exit 1
        fi

    - name: Check for processed changes
      id: check_processed
      if: steps.check_changes.outputs.markdown_changed == 'true'
      run: |
        # 処理後にファイルに変更があるかチェック
        echo "=== 📊 処理結果の確認 ==="
        if git diff --quiet; then
          echo "files_changed=false" >> $GITHUB_OUTPUT
          echo "ℹ️  No files were modified during processing"
        else
          echo "files_changed=true" >> $GITHUB_OUTPUT
          echo "✅ Files were modified during processing"
          echo ""
          echo "📋 変更されたファイルの一覧:"
          git diff --name-only
          echo ""
          echo "📋 変更内容のサンプル:"
          git diff --unified=3 | head -50
        fi

    - name: Commit and push changes
      if: steps.check_processed.outputs.files_changed == 'true'
      run: |
        # Gitの設定
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # 変更されたファイルを追加
        git add .
        
        # コミット
        git commit -m "🤖 Auto-process: Update images and generate JSON files

        - Uploaded local images to Cloudflare Images
        - Updated image URLs in Markdown files  
        - Generated/updated JSON metadata files
        
        [skip ci]"
        
        # プッシュ
        git push

    - name: Create summary
      if: always()
      run: |
        echo "## 📋 Processing Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.check_changes.outputs.markdown_changed }}" = "true" ]; then
          echo "✅ Markdown files detected and processed" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check_processed.outputs.files_changed }}" = "true" ]; then
            echo "✅ Files were updated and committed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Changes made:" >> $GITHUB_STEP_SUMMARY
            echo "- 🖼️ Local images uploaded to Cloudflare Images" >> $GITHUB_STEP_SUMMARY
            echo "- 🔗 Image URLs updated in Markdown files" >> $GITHUB_STEP_SUMMARY
            echo "- 📄 JSON metadata files generated/updated" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ No changes were needed" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "ℹ️ No Markdown files were changed in this push" >> $GITHUB_STEP_SUMMARY
        fi